name: Sync Backend Submodule

on:
  schedule:
    - cron: "0 16 * * *"
  repository_dispatch:
    types: [backend-submodule-updated]
  workflow_dispatch:

env:
  SUBMODULE_NAME: "Backend"

jobs:
  sync-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo with submodules
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.PAT_TOKEN }}
          ref: 'main'
          fetch-depth: 0

      - name: Get current submodule SHA
        id: pre_update_sha
        run: echo "sha=$(git submodule status -- ${{ env.SUBMODULE_NAME }} | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Update Backend submodule
        run: git submodule update --remote --merge ${{ env.SUBMODULE_NAME }}

      - name: Get new submodule SHA
        id: post_update_sha
        run: |
          cd ${{ env.SUBMODULE_NAME }}
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          cd -

      - name: Check if submodule updated
        id: check_diff
        run: |
          if [ "${{ steps.pre_update_sha.outputs.sha }}" != "${{ steps.post_update_sha.outputs.sha }}" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Get latest submodule commit info
        if: steps.check_diff.outputs.changed == 'true'
        id: submodule_info
        run: |
          cd ${{ env.SUBMODULE_NAME }}
          echo "message=$(git log -1 --pretty=format:%s)" >> $GITHUB_OUTPUT
          echo "author=$(git log -1 --pretty=format:%an)" >> $GITHUB_OUTPUT
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          cd -

      - name: Append to Backend-changes.log with full history
        if: steps.check_diff.outputs.changed == 'true'
        run: |
          LOG_FILE="Backend-changes.log"
          
          cd ${{ env.SUBMODULE_NAME }}
          
          git log --pretty=format:"------------------------------------------------------------%nCommit message: %s%nSHA: %H%nAuthor: %an%nSubmodule: ${{ env.SUBMODULE_NAME }}%nUpdate at %ad" --date=format:"%Y-%m-%d %H:%M:%S %z" ${{ steps.pre_update_sha.outputs.sha }}..${{ steps.post_update_sha.outputs.sha }} | tac >> ../$LOG_FILE
          
          cd -

      - name: Commit and push changes
        if: steps.check_diff.outputs.changed == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add ${{ env.SUBMODULE_NAME }} Backend-changes.log
          git commit -m "Backend: ${{ steps.submodule_info.outputs.message }} (by ${{ steps.submodule_info.outputs.author }})"
          git push origin main
